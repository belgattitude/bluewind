{
    "compilerOptions": {
        "target": "es2016",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
        "module": "esnext",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        "lib": ["dom", "es2015"],                 /* Specify library files to be included in the compilation. */
        "allowJs": true,                          /* Allow javascript files to be compiled. */
        "checkJs": true,                         /* Report errors in .js files. */
        "jsx": "react",                           /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        "declaration": false,                     /* Generates corresponding '.d.ts' file. */
        "sourceMap": true,                        /* Generates corresponding '.map' file. */
        "removeComments": true,                   /* Do not emit comments to output. */

        // Don't emit; allow Babel to transform files.
        "noEmit": true,                        /* Do not emit outputs. */
        "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        "forceConsistentCasingInFileNames": true, /* Avoid case-sensitivity issues for windows */

        /* Strict Type-Checking Options */
        "strict": true,                           /* Enable all strict type-checking options. */
        "strictNullChecks": true,                 /* Enable strict null checks. */
        "strictFunctionTypes": true,              /* Enable strict checking of function types. */
        "strictPropertyInitialization": true,     /* Enable strict checking of property initialization in classes. */

        "alwaysStrict": true,                     /* Parse in strict mode and emit "use strict" for each source file. */

        "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
        "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */

        /* Additional Checks */
        /* RELAXED for development */
        "noUnusedLocals": false,                 /* Report errors on unused locals. */
        /* RELAXED for development */
        "noUnusedParameters": false,             /* Report errors on unused parameters. */
        "noImplicitReturns": true,               /* Report error when not all code paths in function return a value. */
        "noFallthroughCasesInSwitch": true,      /* Report errors for fallthrough cases in switch statement. */

        /* Module Resolution Options */
        "moduleResolution": "node",              /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "baseUrl": ".",                          /* Base directory to resolve non-absolute module names. */
        // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
        // "typeRoots": [],                       /* List of folders to include type definitions from. */
        // "types": [],                           /* Type declaration files to be included in compilation. */
        "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

        "importHelpers": false,                     /* Import emit helpers from 'tslib'. */
        "noEmitHelpers": false,                    /* Emit helpers */

        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

        /* Source Map Options */
        // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

        /* Experimental Options */
        "experimentalDecorators": true,           /* Enables experimental support for ES7 decorators. */
        "emitDecoratorMetadata": true,             /* Enables experimental support for emitting type metadata for decorators. */

        // For typescript < 3.7 be sure to set this o false
        // see also https://github.com/TypeStrong/ts-loader/issues/995
        "incremental": true
    },
    "include": [
      "./src"
    ],
    "exclude": [
      "node_modules"
    ]
}
