{
    "openapi": "3.0.0",
    "info": {
        "title": "Bluewind API",
        "description": "Minimal api doc",
        "version": "1.0.0",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev"
        },
        {
            "url": "/api/",
            "description": "With docker-compose and nginx proxy"
        }
    ],
    "tags": [

    ],
    "paths": {
        "/auth/login": {
            "post": {
                "summary": "Login request",
                "requestBody": {
                    "description": "Login request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/queryParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/offsetParam"
                    }

                ],
                "summary": "Search students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        }

    },
    "components": {
        "parameters": {
            "queryParam": {
                "in": "query",
                "name": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "description": "The text fragment to search for"
            },
            "offsetParam": {
                "in": "query",
                "name": "offset",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": "The number of items to skip before starting to collect the result set"
            },
            "limitParam": {
                "in": "query",
                "name": "limit",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 50,
                    "default": 20
                },
                "description": "The numbers of items to return."
            }
        },
        "schemas": {
            "id": {
                "properties": {
                    "id": {
                        "type": "number",
                        "minimum": 1
                    }
                }
            },
            "LoginRequestDTO": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "required": true
                    },
                    "password": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
